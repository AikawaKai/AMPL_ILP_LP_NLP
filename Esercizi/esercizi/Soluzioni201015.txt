Problema 1.

Sono dati N cerchi nel piano cartesiano. Di ogni cerchio conosciamo il raggio. 
Si trovi la disposizione dei (centri dei) cerchi nel piano tale per cui:
1. i cerchi non siano sovrapposti
2. i cerchi siano tutti contenuti in un cerchio piu' grande
3. il raggio del cerchio che li contiene sia minimo.
Cerchio Raggio
1 2,00
2 4,00
3 7,00
4 6,00
5 1,00

Si provi poi con cerchi di raggio crescente linearmente:
Cerchio Raggio
1 1,00
2 2,00
3 3,00
4 4,00
5 5,00 ecc.

SOLUZIONE PROPOSTA

File Modello : cerchi.mod
**************************************************
param cardN;
set N = 1 .. cardN;
param r {i in N} default i;
var x {i in N} default i;
var y {i in N} default -i;
var R >= 0;
minimize raggio: R;
subject to no_inter {i in N, j in N: i > j} :
    sqrt((x[i]-x[j])^2+(y[i]-y[j])^2) >= r[i] + r[j];
subject to contenuti {i in N}:
    sqrt(x[i]^2+y[i]^2) <= R-r[i];
**************************************************

File Dati : cerchi.dat
**************************************************
param cardN := 40;
**************************************************
File batch: cerchi.run
**************************************************
model "PATH"\"FILE MODELLO".mod;
data  "PATH"\"FILE DATI".dat;

param numTent;
param minR default 999999;
let numTent := 150;
param val{1..numTent};
set IT := {1..numTent};
option randseed 1;
option solver snopt;
for{j in IT} {
  for {i in N} let y[i] := y[i] + Uniform(-15,20); 
  for {i in N} let x[i] := x[i] + Uniform(-15,20); 
  solve;
  let val[j] := R;
  if R < minR then let minR := R;  
};
display minR;
**************************************************
Problema 2.

Una societa' telefonica deve posizionare le antenne per la trasmissione del
segnale ai telefoni cellulari in una nuova zona non coperta dal servizio.
La societa ha a disposizione 5 possibili siti, dai quali deve coprire interamente le
5 aree nelle quali la zona e stata opportunamente divisa. Ogni sito
ha un costo di realizzazione (indicato nella prima tabella) e copre un
dato sottoinsieme di aree (indicate dalle crocette nella seconda tabella).

   Sito     1    2    3    4    5
   Costo   18   40    5   21   16

   Sito     1    2    3    4    5
   Area 1        x    x    x
   Area 2   x                   x
   Area 3   x    x         x
   Area 4        x         x    x
   Area 5   x    x              x

SOLUZIONE PROPOSTA

File Modello : Antenne.mod
**************************************************
set Aree;

set Siti;

param Requisiti{Aree};

param Costi{Siti};

param Copertura{Aree,Siti};


var Attivazione{Siti} binary;


minimize Costo: sum{j in Siti} Costi[j] * Attivazione[j];

subject to VincoloCopertura {i in Aree} :
  sum{j in Siti} Copertura[i,j] * Attivazione[j] >= Requisiti[i];

**************************************************

File Dati : Antenne.dat
**************************************************
set Aree := 1 2 3 4 5;

set Siti := A B C D E ;

param Requisiti :=
1 1
2 1
3 1
4 1
5 1 ;

param Costi :=
A 18
B 40
C  5
D 21
E 16 ;

param Copertura :
   A    B    C    D    E :=
1  0    1    1    1    0
2  1    0    0    0    1
3  1    1    0    1    0
4  0    1    0    1    1
5  1    1    0    0    1 ;
**************************************************
